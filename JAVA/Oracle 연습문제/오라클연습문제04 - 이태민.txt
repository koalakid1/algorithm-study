create table student(
    id char(10) primary key,
    name varchar(20) not null,
    department varchar(30) not null,
    address varchar(50) not null
);

insert into student values('20160001','홍길동','컴퓨터공학과','서울시 영등포구');
insert into student values('20162233','이순신','멀티미디어학과','부산시 남구');
insert into student values('20161177','왕건','멀티미디어학과','강원도 삼척시');



1. 동아리(Dongari) 테이블을 생성하시오.
	
	동아리ID, 동아리이름

create table Dongari(
    id char(4) primary key,
    name varchar(20) not null
);

insert into dongari values('0001','수학동아리');
insert into dongari values('0002','게임동아리');
insert into dongari values('0003','과학동아리');


2. 동아리(DongariJoin) 가입현황 테이블을 생성하시오.
   => 한 명의 학생이 여러 동아리에 복 수로 가입할 수 있음.
		
	번호, 학생ID, 동아리ID

create table dongarijoin(
    no char(4) primary key,
    s_id char(4) not null,
    d_id char(4),
    CONSTRAINT fk_student FOREIGN key (s_id) references student (id)
);


insert into dongarijoin values('0001','20160001','0001');
insert into dongarijoin values('0002','20160001','0002');
insert into dongarijoin values('0003','20160001','0003');
insert into dongarijoin values('0004','20162233','0002');
insert into dongarijoin values('0005','20161177',null);


3. 동아리 가입현황 목록을 출력하시오.
	
	동아리이름, 학생명, 학생ID

select d.name, s.name, dj.s_id
from dongari d, student s, dongarijoin dj
where d.id = dj.d_id and s.id = dj.s_id;

NAME                 NAME                 S_ID      
-------------------- -------------------- ----------
과학동아리           홍길동               20160001  
게임동아리           홍길동               20160001  
수학동아리           홍길동               20160001  
게임동아리           이순신               20162233  

4. 동아리에 가입하지 않은 학생목록을 출력하시오.

	학생이름

select *
from  student s
where (select s_id from dongarijoin where d_id is null) in (id);

ID         NAME                 DEPARTMENT                     ADDRESS                                           
---------- -------------------- ------------------------------ --------------------------------------------------
20161177   왕건                 멀티미디어학과                 강원도 삼척시   

5. 한 명의 학생도 가입하지 않은 동아리목록을 출력하시오.
=> 있다고 가정

	동아리이름
select name
from dongari
minus select name from dongari where id in
(select d_id from dongarijoin);

NAME                
--------------------
은월동아리



6. Book테이블을 생성하고, bid를 pk로 설정하고,데이터를 입력하시오.

bid varchar(10) -- 책번호
title varchar(20) -- 책제목

0001 자바
0002 Oracle
0003 HTML
0004 JSP

create table book(
    bid varchar(10) primary key,
    title varchar(20) not null
);

insert into book values('0001', '자바');
insert into book values('0002', 'Oracle');
insert into book values('0003', 'HTML');
insert into book values('0004', 'JSP');

7. bookRent 테이블을 생성하시오. id,bid를 참조키로 설정하시오.
no는 pk.

no number -- 대출번호
id varchar(10) -- 학번
bid varchar(10) -- 책번호
rdate date -- 대출일

create table bookrent(
    no number primary key,-- 대출번호
    id char(10),-- 학번
    bid varchar(10), -- 책번호
    rdate date,-- 대출일
    CONSTRAINT fk_student1 FOREIGN key (id) references student (id),
    CONSTRAINT fk_book FOREIGN key (bid) references book (bid)
);


8. 7번 테이블에 다음 데이터를 입력하시오.

1 20160001 0001 2016-12-01
2 20162233 0002 2016-12-02

insert into bookrent values(1, '20160001', '0001', '2016-12-01');
insert into bookrent values(2, '20162233', '0002', '2016-12-02');

9. 학번,학생명,대출한 책이름, 대출일을 출력하시오.

select s.id,s.name,b.title, br.rdate
from student s, book b, bookrent br
where s.id = br.id and b.bid = br.bid;

ID         NAME                 TITLE                RDATE   
---------- -------------------- -------------------- --------
20160001   홍길동               자바                 16/12/01
20162233   이순신               Oracle               16/12/02


10. 한번도 대출되지 않은 책의 목록을 출력하시오.
select title
from book 
minus 
select title from book where bid in
(select bid from bookrent);

TITLE               
--------------------
HTML
JSP